/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.zaiapi.openapi.api;

import com.zaiapi.openapi.model.ErrorResponse;
import com.zaiapi.openapi.model.SignInRequest;
import com.zaiapi.openapi.model.SignUpRequest;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-05-20T22:00:30.436912600+02:00[Europe/Warsaw]")
@Validated
@Api(value = "auth", description = "the auth API")
public interface AuthApi {

    /**
     * POST /auth/signin
     * Endpoint used to access existing account
     *
     * @param signInRequest Sign in request (required)
     * @return Successful operation (status code 200)
     *         or Data is incorrect (status code 422)
     */
    @ApiOperation(value = "", nickname = "signIn", notes = "Endpoint used to access existing account", response = Object.class, tags={ "auth", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Object.class),
        @ApiResponse(code = 422, message = "Data is incorrect", response = ErrorResponse.class) })
    @PostMapping(
        value = "/auth/signin",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<Object> signIn(@ApiParam(value = "Sign in request" ,required=true )  @Valid @RequestBody SignInRequest signInRequest);


    /**
     * POST /auth/signup
     * Endpoint used to create an account
     *
     * @param signUpRequest Sign up request (required)
     * @return Successful operation (status code 200)
     *         or Data is incorrect (status code 422)
     */
    @ApiOperation(value = "", nickname = "signUp", notes = "Endpoint used to create an account", response = Object.class, tags={ "auth", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = Object.class),
        @ApiResponse(code = 422, message = "Data is incorrect", response = ErrorResponse.class) })
    @PostMapping(
        value = "/auth/signup",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<Object> signUp(@ApiParam(value = "Sign up request" ,required=true )  @Valid @RequestBody SignUpRequest signUpRequest);

}
